import json
import random
import re
from typing import Dict, List
import requests
import get_api



# L∆∞u tr·ªØ l·ªãch s·ª≠ tr√≤ chuy·ªán
conversation_history: List[Dict[str, str]] = []

# H√†m t·∫£i c·∫•u h√¨nh t·ª´ file JSON
def load_config(file_path: str = "intents.json") -> Dict:
    try:
        with open(file_path, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        print(f"Error: File {file_path} not found.")
        return {}

# H√†m tr√≠ch xu·∫•t t√™n th√†nh ph·ªë
def extract_city(user_input: str) -> str:
    cities = ["h√† n·ªôi", "tp hcm", "ƒë√† n·∫µng", "hu·∫ø", "c·∫ßn th∆°", "nha trang", "new york"]
    user_input = user_input.lower()
    for city in cities:
        if city in user_input:
            return city.title()
    return "H√† N·ªôi"

# H√†m tr√≠ch xu·∫•t t√™n qu·ªëc gia
def extract_name(user_input: str) -> str:
    user_input = user_input.lower().strip()

    # Danh s√°ch c√°c c·ª•m c·∫ßn lo·∫°i b·ªè
    trash_words = ["qu·ªëc gia", "ƒë·∫•t n∆∞·ªõc", "th√¥ng tin", "th√¥ng tin qu·ªëc gia", "th√¥ng tin ƒë·∫•t n∆∞·ªõc", "v·ªÅ"]

    # X√≥a c√°c c·ª•m t·ª´ g√¢y nhi·ªÖu
    for word in trash_words:
        user_input = user_input.replace(word, "").strip()

    # √Ånh x·∫° t√™n ti·∫øng Vi·ªát sang t√™n API ti·∫øng Anh
    country_map = {
        "vi·ªát nam": "vietnam",
        "t√¢y ban nha": "spain",
        "th√°i lan": "thailand",
        "hoa k·ª≥": "united states",
        "m·ªπ": "united states",
        "nh·∫≠t b·∫£n": "japan"
    }

    # N·∫øu ng∆∞·ªùi d√πng kh√¥ng nh·∫≠p g√¨ c·∫£
    if not user_input:
        return "Vui l√≤ng nh·∫≠p t√™n qu·ªëc gia (v√≠ d·ª•: 'qu·ªëc gia Vi·ªát Nam')."

    return country_map.get(user_input, user_input)

# H√†m ph√°t hi·ªán √Ω ƒë·ªãnh
def detect_intent(user_input: str, config: Dict) -> str:
    user_input = user_input.lower()

    weather_keywords = ["th·ªùi ti·∫øt", "d·ª± b√°o th·ªùi ti·∫øt", "cho t√¥i bi·∫øt th·ªùi ti·∫øt", "xem th·ªùi ti·∫øt"]
    country_keywords = ["qu·ªëc gia", "ƒë·∫•t n∆∞·ªõc", "th√¥ng tin qu·ªëc gia", "th√¥ng tin ƒë·∫•t n∆∞·ªõc"]

    # Check keywords b·∫±ng regex, t√°ch t·ª´ ng·ªØ ƒë·ªÉ linh ho·∫°t h∆°n
    for kw in country_keywords:
        if re.search(r'\b' + re.escape(kw) + r'\b', user_input):
            return "ask_country_info"

    for kw in weather_keywords:
        if re.search(r'\b' + re.escape(kw) + r'\b', user_input):
            return "ask_weather"

    if "tin t·ª©c" in user_input:
        return "ask_news"

    # Check c·∫•u h√¨nh intents t·ª´ file JSON
    for intent, data in config.items():
        for keyword in data["keywords"]:
            if re.search(r'\b' + re.escape(keyword) + r'\b', user_input):
                return intent

    return None

# H√†m x·ª≠ l√Ω ph·∫£n h·ªìi
last_intent = None  # ƒë·∫∑t ·ªü ƒë·∫ßu file ho·∫∑c global

def chatbot_response(user_input: str) -> str:
    global conversation_history

    if not user_input or user_input.strip() == "":
        return "B·∫°n ch∆∞a nh·∫≠p g√¨ c·∫£, h√£y th·ª≠ n√≥i g√¨ ƒë√≥ nh√©!"

    user_input = user_input.strip()
    config = load_config("intents.json")
    intent = detect_intent(user_input, config)
    
    conversation_history.append({"input": user_input, "intent": intent})

    # === C√°c keyword ===
    weather_keywords = config.get("ask_weather", {}).get("keywords", [])
    country_keywords = config.get("ask_country_info", {}).get("keywords", [])

    # === Th√†nh ph·ªë h·ªó tr·ª£ ===
    supported_cities = ["H√† N·ªôi", "TP HCM", "ƒê√† N·∫µng", "Hu·∫ø", "C·∫ßn Th∆°", "Nha Trang", "New York"]

    # === 1. G·ª£i √Ω TH·ªúI TI·∫æT n·∫øu ch∆∞a r√µ th√†nh ph·ªë ===
    if intent == "ask_weather" or any(kw in user_input.lower() for kw in weather_keywords):
        if not any(city.lower() in user_input.lower() for city in supported_cities):
            return (
                "üå§Ô∏è T√¥i c√≥ th·ªÉ cung c·∫•p th·ªùi ti·∫øt cho c√°c th√†nh ph·ªë: "
                + ", ".join(supported_cities)
                + "<br>B·∫°n h√£y nh·∫≠p l·∫°i v·ªõi t√™n th√†nh ph·ªë c·ª• th·ªÉ nh√©!"
            )
        else:
            city = extract_city(user_input)
            response = get_api.get_weather(city)

    # === 2. G·ª£i √Ω QU·ªêC GIA n·∫øu ch∆∞a r√µ t√™n ===
    elif intent == "ask_country_info" or any(kw in user_input.lower() for kw in country_keywords):
        name = extract_name(user_input)
        if name == "Vui l√≤ng nh·∫≠p t√™n qu·ªëc gia (v√≠ d·ª•: 'qu·ªëc gia Vi·ªát Nam').":
            return (
                "üåç B·∫°n mu·ªën bi·∫øt th√¥ng tin qu·ªëc gia n√†o?<br>"
            "H√£y nh·∫≠p nh∆∞ sau: <b>qu·ªëc gia Vi·ªát Nam</b>, <b>qu·ªëc gia T√¢y Ban Nha</b>, v.v.<br>"
            "Ho·∫∑c b·∫°n c√≥ th·ªÉ t√¨m ki·∫øm b·∫•t k·ª≥ qu·ªëc gia n√†o: qu·ªëc gia + Country English Name. Vd: qu·ªëc gia singapore"
            )
        response = get_api.get_country_info(name)

    # === 3. L·∫•y tin t·ª©c ===
    elif intent == "ask_news":
        response = get_api.get_news()

    # === 4. C√°c ph·∫£n h·ªìi th√¥ng th∆∞·ªùng t·ª´ file intents.json ===
    elif intent and intent in config:
        response = random.choice(config[intent]["responses"])
        response = response.replace('\n', '<br>') 

    else:
        response = "T√¥i kh√¥ng hi·ªÉu, b·∫°n c√≥ th·ªÉ h·ªèi l·∫°i kh√¥ng?"

    conversation_history.append({"input": response, "intent": "bot_response"})
    return response

def reset_conversation():
    global conversation_history
    conversation_history = []

def get_conversation_history():
    return conversation_history




